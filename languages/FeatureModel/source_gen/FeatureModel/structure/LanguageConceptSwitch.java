package FeatureModel.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int ComplexFeature = 0;
  public static final int Feature = 1;
  public static final int FeatureModel = 2;
  public static final int Group = 3;
  public static final int RootFeature = 4;
  public static final int SimpleFeature = 5;
  public static final int Split = 6;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x50a851c9401b45e3L, 0x83bb77ced6965729L);
    builder.put(0x5fd48bfb9a3fb7ebL, ComplexFeature);
    builder.put(0x5fd48bfb9a3fb7e9L, Feature);
    builder.put(0x5fd48bfb9a3fb7e7L, FeatureModel);
    builder.put(0x5fd48bfb9a3fb7ecL, Group);
    builder.put(0x5fd48bfb9a3fb7e8L, RootFeature);
    builder.put(0x5fd48bfb9a3fb7eaL, SimpleFeature);
    builder.put(0x41c767f40185bL, Split);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
