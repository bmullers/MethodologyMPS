package FeatureModel.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptComplexFeature = createDescriptorForComplexFeature();
  /*package*/ final ConceptDescriptor myConceptFeature = createDescriptorForFeature();
  /*package*/ final ConceptDescriptor myConceptFeatureModel = createDescriptorForFeatureModel();
  /*package*/ final ConceptDescriptor myConceptGroup = createDescriptorForGroup();
  /*package*/ final ConceptDescriptor myConceptRootFeature = createDescriptorForRootFeature();
  /*package*/ final ConceptDescriptor myConceptSimpleFeature = createDescriptorForSimpleFeature();
  /*package*/ final ConceptDescriptor myConceptSplit = createDescriptorForSplit();
  /*package*/ final EnumerationDescriptor myEnumerationVariantTime = new EnumerationDescriptor_VariantTime();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptComplexFeature, myConceptFeature, myConceptFeatureModel, myConceptGroup, myConceptRootFeature, myConceptSimpleFeature, myConceptSplit);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.ComplexFeature:
        return myConceptComplexFeature;
      case LanguageConceptSwitch.Feature:
        return myConceptFeature;
      case LanguageConceptSwitch.FeatureModel:
        return myConceptFeatureModel;
      case LanguageConceptSwitch.Group:
        return myConceptGroup;
      case LanguageConceptSwitch.RootFeature:
        return myConceptRootFeature;
      case LanguageConceptSwitch.SimpleFeature:
        return myConceptSimpleFeature;
      case LanguageConceptSwitch.Split:
        return myConceptSplit;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationVariantTime);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForComplexFeature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FeatureModel", "ComplexFeature", 0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7ebL);
    b.class_(false, false, false);
    b.super_("FeatureModel.structure.Feature", 0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7e9L);
    b.origin("r:e3c38147-e3aa-4a42-a8a5-17ba87d04ca1(FeatureModel.structure)/6905298041406732267");
    b.version(2);
    b.aggregate("split", 0x41c767f40186aL).target(0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x41c767f40185bL).optional(true).ordered(true).multiple(true).origin("1157195173468266").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFeature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FeatureModel", "Feature", 0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7e9L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e3c38147-e3aa-4a42-a8a5-17ba87d04ca1(FeatureModel.structure)/6905298041406732265");
    b.version(2);
    b.property("bindingTime1", 0x41c767f401865L).type(MetaIdFactory.dataTypeId(0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7fcL)).origin("1157195173468261").done();
    b.property("bindingTime2", 0x41c767f401867L).type(MetaIdFactory.dataTypeId(0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7fcL)).origin("1157195173468263").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFeatureModel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FeatureModel", "FeatureModel", 0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7e7L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e3c38147-e3aa-4a42-a8a5-17ba87d04ca1(FeatureModel.structure)/6905298041406732263");
    b.version(2);
    b.aggregate("rootFeature", 0x41c767f401859L).target(0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7e8L).optional(false).ordered(true).multiple(false).origin("1157195173468249").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGroup() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FeatureModel", "Group", 0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7ecL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e3c38147-e3aa-4a42-a8a5-17ba87d04ca1(FeatureModel.structure)/6905298041406732268");
    b.version(2);
    b.property("isClosed", 0x41c767f40186eL).type(PrimitiveTypeId.BOOLEAN).origin("1157195173468270").done();
    b.property("min", 0x41c767f401870L).type(PrimitiveTypeId.INTEGER).origin("1157195173468272").done();
    b.property("max", 0x41c767f401873L).type(PrimitiveTypeId.INTEGER).origin("1157195173468275").done();
    b.property("bindingTime1", 0x41c767f401877L).type(MetaIdFactory.dataTypeId(0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7fcL)).origin("1157195173468279").done();
    b.property("bindingTime2", 0x41c767f40187cL).type(MetaIdFactory.dataTypeId(0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7fcL)).origin("1157195173468284").done();
    b.aggregate("features", 0x5fd48bfb9a3fb7edL).target(0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7e9L).optional(true).ordered(true).multiple(true).origin("6905298041406732269").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRootFeature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FeatureModel", "RootFeature", 0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7e8L);
    b.class_(false, false, false);
    b.super_("FeatureModel.structure.ComplexFeature", 0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7ebL);
    b.origin("r:e3c38147-e3aa-4a42-a8a5-17ba87d04ca1(FeatureModel.structure)/6905298041406732264");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimpleFeature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FeatureModel", "SimpleFeature", 0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7eaL);
    b.class_(false, false, false);
    b.super_("FeatureModel.structure.Feature", 0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7e9L);
    b.origin("r:e3c38147-e3aa-4a42-a8a5-17ba87d04ca1(FeatureModel.structure)/6905298041406732266");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSplit() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FeatureModel", "Split", 0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x41c767f40185bL);
    b.class_(false, false, false);
    b.origin("r:e3c38147-e3aa-4a42-a8a5-17ba87d04ca1(FeatureModel.structure)/1157195173468251");
    b.version(2);
    b.property("min", 0x41c767f40185cL).type(PrimitiveTypeId.INTEGER).origin("1157195173468252").done();
    b.property("max", 0x41c767f40185eL).type(PrimitiveTypeId.INTEGER).origin("1157195173468254").done();
    b.aggregate("group", 0x41c767f401861L).target(0x50a851c9401b45e3L, 0x83bb77ced6965729L, 0x5fd48bfb9a3fb7ecL).optional(false).ordered(true).multiple(false).origin("1157195173468257").done();
    return b.create();
  }
}
