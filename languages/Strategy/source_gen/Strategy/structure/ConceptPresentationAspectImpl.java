package Strategy.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_AbstractTactic;
  private ConceptPresentation props_AppliedTactic;
  private ConceptPresentation props_CallProcedure;
  private ConceptPresentation props_ChoiceRef;
  private ConceptPresentation props_ConcreteTactic;
  private ConceptPresentation props_CoreAsset;
  private ConceptPresentation props_Delayed;
  private ConceptPresentation props_FChoiceRef;
  private ConceptPresentation props_GChoiceRef;
  private ConceptPresentation props_Strategy;
  private ConceptPresentation props_TacticRef;
  private ConceptPresentation props_TacticRefTactic;
  private ConceptPresentation props_TacticTypeRef;
  private ConceptPresentation props_Valuation;
  private ConceptPresentation props_Value;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.AbstractTactic:
        if (props_AbstractTactic == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_AbstractTactic = cpb.create();
        }
        return props_AbstractTactic;
      case LanguageConceptSwitch.AppliedTactic:
        if (props_AppliedTactic == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x373945843af4b09L, 0x880a7168a8fb745aL, 0x3416b497162b2babL, 0x47ee70901066f740L, "tactic", "", "");
          props_AppliedTactic = cpb.create();
        }
        return props_AppliedTactic;
      case LanguageConceptSwitch.CallProcedure:
        if (props_CallProcedure == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x373945843af4b09L, 0x880a7168a8fb745aL, 0x3416b497162b2bacL, 0x47ee70901066f74eL, "calls", "", "");
          props_CallProcedure = cpb.create();
        }
        return props_CallProcedure;
      case LanguageConceptSwitch.ChoiceRef:
        if (props_ChoiceRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ChoiceRef = cpb.create();
        }
        return props_ChoiceRef;
      case LanguageConceptSwitch.ConcreteTactic:
        if (props_ConcreteTactic == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_ConcreteTactic = cpb.create();
        }
        return props_ConcreteTactic;
      case LanguageConceptSwitch.CoreAsset:
        if (props_CoreAsset == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x373945843af4b09L, 0x880a7168a8fb745aL, 0x3416b497162b2badL, 0x47ee70901066f752L, "matches", "", "");
          props_CoreAsset = cpb.create();
        }
        return props_CoreAsset;
      case LanguageConceptSwitch.Delayed:
        if (props_Delayed == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Delayed");
          props_Delayed = cpb.create();
        }
        return props_Delayed;
      case LanguageConceptSwitch.FChoiceRef:
        if (props_FChoiceRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x373945843af4b09L, 0x880a7168a8fb745aL, 0x47ee70901066f733L, 0x47ee70901066f734L, "fchoice", "", "");
          props_FChoiceRef = cpb.create();
        }
        return props_FChoiceRef;
      case LanguageConceptSwitch.GChoiceRef:
        if (props_GChoiceRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x373945843af4b09L, 0x880a7168a8fb745aL, 0x47ee70901066f735L, 0x47ee70901066f736L, "gchoice", "", "");
          props_GChoiceRef = cpb.create();
        }
        return props_GChoiceRef;
      case LanguageConceptSwitch.Strategy:
        if (props_Strategy == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Strategy = cpb.create();
        }
        return props_Strategy;
      case LanguageConceptSwitch.TacticRef:
        if (props_TacticRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_TacticRef = cpb.create();
        }
        return props_TacticRef;
      case LanguageConceptSwitch.TacticRefTactic:
        if (props_TacticRefTactic == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x373945843af4b09L, 0x880a7168a8fb745aL, 0x47ee7090106a424aL, 0x47ee7090106a424cL, "ref", "", "");
          props_TacticRefTactic = cpb.create();
        }
        return props_TacticRefTactic;
      case LanguageConceptSwitch.TacticTypeRef:
        if (props_TacticTypeRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x373945843af4b09L, 0x880a7168a8fb745aL, 0x47ee7090106a424dL, 0x47ee7090106a424fL, "ref", "", "");
          props_TacticTypeRef = cpb.create();
        }
        return props_TacticTypeRef;
      case LanguageConceptSwitch.Valuation:
        if (props_Valuation == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Valuation = cpb.create();
        }
        return props_Valuation;
      case LanguageConceptSwitch.Value:
        if (props_Value == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Value");
          props_Value = cpb.create();
        }
        return props_Value;
    }
    return null;
  }
}
