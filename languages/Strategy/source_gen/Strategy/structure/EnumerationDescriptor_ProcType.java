package Strategy.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_ProcType extends EnumerationDescriptorBase {

  public EnumerationDescriptor_ProcType() {
    super(0x373945843af4b09L, 0x880a7168a8fb745aL, 0x47ee70901066f739L, "ProcType", "r:a3322c0c-065c-4f0b-889b-54a38ede9635(Strategy.structure)/5183203985202804537");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_sequence_0 = new EnumerationDescriptor.MemberDescriptor("sequence", "sequence", 0x47ee70901066f73aL, "r:a3322c0c-065c-4f0b-889b-54a38ede9635(Strategy.structure)/5183203985202804538");
  private final EnumerationDescriptor.MemberDescriptor myMember_parallel_0 = new EnumerationDescriptor.MemberDescriptor("parallel", "parallel", 0x47ee70901066f73bL, "r:a3322c0c-065c-4f0b-889b-54a38ede9635(Strategy.structure)/5183203985202804539");
  private final EnumerationDescriptor.MemberDescriptor myMember_simple_0 = new EnumerationDescriptor.MemberDescriptor("simple", "simple", 0x47ee70901066f73cL, "r:a3322c0c-065c-4f0b-889b-54a38ede9635(Strategy.structure)/5183203985202804540");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x373945843af4b09L, 0x880a7168a8fb745aL, 0x47ee70901066f739L, 0x47ee70901066f73aL, 0x47ee70901066f73bL, 0x47ee70901066f73cL);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_sequence_0, myMember_parallel_0, myMember_simple_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "sequence":
        return myMember_sequence_0;
      case "parallel":
        return myMember_parallel_0;
      case "simple":
        return myMember_simple_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
