package TacticType.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AssetType = 0;
  public static final int Literal = 1;
  public static final int Parameter = 2;
  public static final int Procedure = 3;
  public static final int RegexConstraint = 4;
  public static final int TacticType = 5;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xd7f4c9b7457c4ddfL, 0x8db169fc1d011181L);
    builder.put(0x1d13a7c5fe75b1fcL, AssetType);
    builder.put(0x1d13a7c5fe75b402L, Literal);
    builder.put(0x5fd48bfb9a42636bL, Parameter);
    builder.put(0x5fd48bfb9a42636aL, Procedure);
    builder.put(0x1d13a7c5fe75feb8L, RegexConstraint);
    builder.put(0x5fd48bfb9a4262ebL, TacticType);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
